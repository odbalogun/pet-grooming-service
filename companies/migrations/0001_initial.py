# Generated by Django 2.1.4 on 2019-04-14 00:33

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('delete_status', models.BooleanField(default=False, verbose_name='deleted')),
                ('company_name', models.CharField(max_length=200, verbose_name='company name')),
                ('description', models.TextField(null=True, verbose_name='description')),
                ('website', models.CharField(max_length=100, null=True, verbose_name='website')),
                ('contact_number', models.CharField(max_length=50, null=True, verbose_name='contact number')),
                ('time_zone', models.CharField(max_length=100, null=True, verbose_name='time zone')),
                ('time_slot_interval', models.IntegerField(default=15, verbose_name='time slot interval')),
                ('country', models.CharField(max_length=100, null=True, verbose_name='country')),
                ('hours_bookable_in_advance', models.IntegerField(default=3, verbose_name='min hours bookable in advance')),
                ('max_day_bookable_in_advance', models.IntegerField(default=10, verbose_name='max days bookable in advance')),
                ('cancellation_limit', models.IntegerField(default=3, verbose_name='max hours to cancellation')),
                ('opening_time', models.TimeField(default=datetime.time(9, 0), verbose_name='daily opening time')),
                ('closing_time', models.TimeField(default=datetime.time(17, 0), verbose_name='daily closing time')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DatesClosed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('closed_date', models.DateField(verbose_name='date closed')),
            ],
        ),
        migrations.CreateModel(
            name='DaysOff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=20, verbose_name='day')),
            ],
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('delete_status', models.BooleanField(default=False, verbose_name='deleted')),
                ('location_name', models.CharField(max_length=100, verbose_name='location name')),
                ('contact_number', models.CharField(max_length=50, verbose_name='contact number')),
                ('contact_email', models.CharField(max_length=50, verbose_name='contact email')),
                ('address', models.TextField(verbose_name='physical address')),
                ('city', models.CharField(max_length=50, verbose_name='city')),
                ('state', models.CharField(max_length=50, verbose_name='state')),
                ('zip_code', models.CharField(max_length=50, null=True, verbose_name='zip code')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='companies.Company')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
